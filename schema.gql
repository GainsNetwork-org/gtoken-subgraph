type Account @entity {
  "Address"
  id: ID!
  "Vault positions"
  accountVaults: [AccountVault!]! @derivedFrom(field: "account")
  "Total assets deposited"
  deposits: [Deposit!]! @derivedFrom(field: "account")
  "Total assets withdrawn"
  Withdraws: [Withdraw!]! @derivedFrom(field: "account")
  "Total locked deposits"
  lockedDeposits: [LockedDeposit!]! @derivedFrom(field: "account")
  "Total locked deposit transactions"
  lockedDepositTransactions: [LockedDepositTransaction!]! @derivedFrom(field: "account")
  "Total deposits unlocked"
  depositsUnlocked: [DepositUnlocked!]! @derivedFrom(field: "account")
  "Total shares transferred to"
  sharesReceived: [Transfer!]! @derivedFrom(field: "to")
  "Total shares transferred from"
  sharesSent: [Transfer!]! @derivedFrom(field: "from")
  "Total locked deposits transferred to"
  lockedDepositsReceived: [LockedDepositTransfer!]! @derivedFrom(field: "to")
  "Total locked deposits transferred from"
  lockedDepositsSent: [LockedDepositTransfer!]! @derivedFrom(field: "from")
}

type AccountVault @entity {
  "Generated ID - account-vault"
  id: ID!
  "Vault"
  vault: Vault!
  "Account"
  account: Account!
  "Share balance (unlocked)"
  sharesBalance: BigDecimal!
  "Shares locked"
  sharesLocked: BigDecimal!
  "Total assets deposited"
  totalAssetsDeposited: BigDecimal!
  "Total assets withdrawn"
  totalAssetsWithdrawn: BigDecimal!
  "Locked Deposits"
  lockedDeposits: [LockedDeposit!]! @derivedFrom(field: "accountVault")
  "Locked deposit transactions"
  lockedDepositTransactions: [LockedDepositTransaction!]! @derivedFrom(field: "accountVault")
  "Total deposits unlocked"
  depositsUnlocked: [DepositUnlocked!]! @derivedFrom(field: "accountVault")
  "Deposits"
  deposits: [Deposit!]! @derivedFrom(field: "accountVault")
  "Withdraws"
  withdraws: [Withdraw!]! @derivedFrom(field: "accountVault")
  "Total shares transferred to"
  sharesReceived: [Transfer!]! @derivedFrom(field: "toAccountVault")
  "Total shares transferred from"
  sharesSent: [Transfer!]! @derivedFrom(field: "fromAccountVault")
  "Total locked deposits transferred to"
  lockedDepositsReceived: [LockedDepositTransfer!]! @derivedFrom(field: "toAccountVault")
  "Total locked deposits transferred from"
  lockedDepositsSent: [LockedDepositTransfer!]! @derivedFrom(field: "fromAccountVault")
}

type Deposit @entity {
  "Generated ID - transaction-log"
  id: ID!
  "Vault"
  vault: Vault!
  "Account making deposit"
  account: Account!
  "Account vault"
  accountVault: AccountVault!
  "Number of assets deposited"
  assets: BigDecimal!
  "Number of new shares minted"
  shares: BigDecimal!
  "Transaction"
  transaction: Transaction!
}

type DepositUnlocked @entity {
  "Generated ID - deposit ID-transaction ID"
  id: ID!
  "Vault"
  vault: Vault!
  "Account making transaction"
  account: Account!
  "Account vault"
  accountVault: AccountVault!
  "Locked deposit"
  lockedDeposit: LockedDeposit!
  "Transaction"
  transaction: Transaction!
}

type LockedDepositTransaction @entity {
  "Generated ID - deposit ID-transaction ID"
  id: ID!
  "Vault"
  vault: Vault!
  "Account making transaction"
  account: Account!
  "Account vault"
  accountVault: AccountVault!
  "Locked deposit"
  lockedDeposit: LockedDeposit!
  "Transaction"
  transaction: Transaction!
}

type LockedDeposit @entity {
  "Locked deposit ID"
  id: ID!
  "Vault"
  vault: Vault!
  "Account owning locked deposit"
  account: Account!
  "Account vault"
  accountVault: AccountVault!
  "Number of assets deposited"
  assetsDeposited: BigDecimal!
  "Number of assets discounted"
  assetsDiscount: BigDecimal!
  "Discount percentage"
  discountP: BigDecimal!
  "Number of new shares minted"
  shares: BigDecimal!
  "Lock duration"
  lockDuration: Int!
  "Still active"
  active: Boolean!
}

type LockedDepositTransfer @entity {
  "Generated ID - transaction-log"
  id: ID!
  "Vault"
  vault: Vault!
  "Sender"
  from: Account!
  "From account vault"
  fromAccountVault: AccountVault!
  "Receiver"
  to: Account!
  "To account vault"
  toAccountVault: AccountVault!
  "Locked deposit"
  lockedDeposit: LockedDeposit!
  "Transaction"
  transaction: Transaction!
}

type Transaction @entity {
  "Generated ID - transaction-log"
  id: ID!
  "Log index related to the event. A Transaction might contain multiple events."
  logIndex: BigInt!
  "The event name / call stacktrace"
  event: String!
  "The transaction sender"
  from: Bytes!
  "Gas price used in the transaction"
  gasPrice: BigInt!
  "Gas limit used in the transaction"
  gasLimit: BigInt!
  "Transaction hash"
  hash: Bytes!
  "The transaction index"
  index: BigInt!
  "Address that received the transaction"
  to: Bytes!
  "Ether value sent in the transaction"
  value: BigInt!
  "Timestamp when the transaction was executed"
  timestamp: BigInt!
  "Gas limit used in the current block"
  blockGasLimit: BigInt!
  "Block number"
  blockNumber: BigInt!
}

type Transfer @entity {
  "Generated ID - transaction-log"
  id: ID!
  "Vault"
  vault: Vault!
  "Sender"
  from: Account!
  "From account vault"
  fromAccountVault: AccountVault!
  "Receiver"
  to: Account!
  "To account vault"
  toAccountVault: AccountVault!
  "Number of new shares minted"
  shares: BigDecimal!
  "Market rate at time of transfer"
  assetValue: BigDecimal!
  "Transaction"
  transaction: Transaction!
}

type Vault @entity {
  "Vault address"
  id: ID!
  "Epoch ID"
  epoch: Int!
  "Exchange rate"
  shareToAssets: BigDecimal!
  "Asset decimals"
  assetDecimals: Int!
  "Share decimals"
  shareDecimals: BigInt
  "Block number of last update"
  lastUpdateBlock: Int!
  "Timestamp of last update"
  lastUpdateTimestamp: Int!
  "Locked deposits in vault"
  lockedDeposits: [LockedDeposit!]! @derivedFrom(field: "vault")
  "Locked deposit transactions"
  lockedDepositTransactions: [LockedDepositTransaction!]! @derivedFrom(field: "vault")
  "Deposits unlocked"
  depositsUnlocked: [DepositUnlocked!]! @derivedFrom(field: "vault")
  "Deposits to vault"
  deposits: [Deposit!]! @derivedFrom(field: "vault")
  "Withdraws from vault"
  withdraws: [Withdraw!]! @derivedFrom(field: "vault")
  "Transfers of vault shares"
  transfers: [Transfer!]! @derivedFrom(field: "vault")
  "Total locked deposits transferred to"
  lockedDepositsReceived: [LockedDepositTransfer!]! @derivedFrom(field: "vault")
  "Total locked deposits transferred from"
  lockedDepositsSent: [LockedDepositTransfer!]! @derivedFrom(field: "vault")
}

type Withdraw @entity {
  "Generated ID - transaction-log"
  id: ID!
  "Vault"
  vault: Vault!
  "Account making deposit"
  account: Account!
  "Account vault"
  accountVault: AccountVault!
  "Number of new shares deposited"
  shares: BigDecimal!
  "Number of assets received"
  assets: BigDecimal!
  "Transaction"
  transaction: Transaction!
}